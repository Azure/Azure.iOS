// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name AzureCommunication
import AzureCore
import Foundation
import Swift
public protocol CommunicationTokenCredentialProviding {
  func token(completionHandler: @escaping AzureCommunication.CommunicationTokenCompletionHandler)
}
@objc public protocol CommunicationIdentifier : ObjectiveC.NSObjectProtocol {
}
@objc @objcMembers public class CommunicationUserIdentifier : ObjectiveC.NSObject, AzureCommunication.CommunicationIdentifier {
  @objc final public let identifier: Swift.String
  @objc public init(identifier: Swift.String)
  @objc deinit
  @objc override dynamic public init()
}
@objc @objcMembers public class CallingApplicationIdentifier : ObjectiveC.NSObject, AzureCommunication.CommunicationIdentifier {
  @objc final public let identifier: Swift.String
  @objc public init(identifier: Swift.String)
  @objc deinit
  @objc override dynamic public init()
}
@objc @objcMembers public class UnknownIdentifier : ObjectiveC.NSObject, AzureCommunication.CommunicationIdentifier {
  @objc final public let identifier: Swift.String
  @objc public init(identifier: Swift.String)
  @objc deinit
  @objc override dynamic public init()
}
@objc @objcMembers public class PhoneNumberIdentifier : ObjectiveC.NSObject, AzureCommunication.CommunicationIdentifier {
  @objc final public let phoneNumber: Swift.String
  @objc public init(phoneNumber: Swift.String)
  @objc deinit
  @objc override dynamic public init()
}
@objc @objcMembers public class MicrosoftTeamsUserIdentifier : ObjectiveC.NSObject, AzureCommunication.CommunicationIdentifier {
  @objc final public let userId: Swift.String
  @objc final public let isAnonymous: Swift.Bool
  @objc public init(userId: Swift.String, isAnonymous: Swift.Bool = false)
  @objc deinit
  @objc override dynamic public init()
}
@objc @objcMembers public class CommunicationAccessToken : ObjectiveC.NSObject {
  @objc final public let token: Swift.String
  @objc final public let expiresOn: Foundation.Date
  @objc public init(token: Swift.String, expiresOn: Foundation.Date)
  @objc deinit
  @objc override dynamic public init()
}
public typealias TokenRefresherClosure = (@escaping AzureCommunication.TokenRefreshOnCompletion) -> Swift.Void
@objc @objcMembers public class CommunicationTokenRefreshOptions : ObjectiveC.NSObject {
  @objc public init(initialToken: Swift.String? = nil, refreshProactively: Swift.Bool = false, tokenRefresher: @escaping AzureCommunication.TokenRefresherClosure)
  @objc deinit
  @objc override dynamic public init()
}
public typealias CommunicationTokenCompletionHandler = (AzureCommunication.CommunicationAccessToken?, Swift.Error?) -> Swift.Void
public typealias TokenRefreshOnCompletion = (Swift.String?, Swift.Error?) -> Swift.Void
@objc @objcMembers public class CommunicationTokenCredential : ObjectiveC.NSObject {
  @objc public init(token: Swift.String) throws
  @objc public init(with option: AzureCommunication.CommunicationTokenRefreshOptions) throws
  @objc public func token(completionHandler: @escaping AzureCommunication.CommunicationTokenCompletionHandler)
  @objc deinit
  @objc override dynamic public init()
}
public class CommunicationTokenCredentialPolicy : AzureCore.Authenticating {
  public var next: AzureCore.PipelineStage?
  public init(credential: AzureCommunication.CommunicationTokenCredential)
  public func authenticate(request: AzureCore.PipelineRequest, completionHandler: @escaping AzureCore.OnRequestCompletionHandler)
  @objc deinit
}
